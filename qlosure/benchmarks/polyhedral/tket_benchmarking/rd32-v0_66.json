{
    "Domain": "{ S3[i0, i1] : i0 <= 1 and 0 <= i1 <= i0; S4[i0, i1] : i0 <= 1 and 0 <= i1 <= i0; S17[i0, 0] : 0 <= i0 <= 1; S14[i0, i1, 0] : 0 <= i0 <= 1 and 0 <= i1 <= 1; S9[i0, 0] : 0 <= i0 <= 1; S5[i0, i1, i2] : 0 <= i0 <= 1 and i1 <= 1 and 0 <= i2 <= i1; S0[i0, i1] : i0 >= 0 and 0 <= i1 <= 1 - i0; S1[i0, i1, 0] : 0 <= i0 <= 1 and 0 <= i1 <= 1; S2[i0, i1, i2] : i0 >= 0 and i1 >= 0 and 0 <= i2 <= 1 - i0 and i2 <= 1 - i1; S23[i0, 0] : 0 <= i0 <= 1 }",
    "Read": "{ S4[i0, i1] -> q[3 - i0] : i0 <= 1 and 0 <= i1 <= i0; S4[i0, i1] -> q[i0 + 2i1] : i0 <= 1 and 0 <= i1 <= i0; S14[i0, i1, i2 = 0] -> q[o0] : 0 <= i0 <= 1 and 0 <= i1 <= 1 and i0 <= o0 <= 1 + i0; S23[i0, i1 = 0] -> q[3 - i0] : 0 <= i0 <= 1; S23[i0, i1 = 0] -> q[1 + 2i0] : 0 <= i0 <= 1; S17[i0, i1 = 0] -> q[2 - i0] : 0 <= i0 <= 1; S17[i0, i1 = 0] -> q[1 + 2i0] : 0 <= i0 <= 1; S3[i0, i1] -> q[1 - i0 + 3i1] : i0 <= 1 and 0 <= i1 <= i0; S3[i0, i1] -> q[i0] : i0 <= 1 and 0 <= i1 <= i0; S5[i0, i1, i2] -> q[i0 + i2] : 0 <= i0 <= 1 and i1 <= 1 and 0 <= i2 <= i1; S9[i0, i1 = 0] -> q[3 - 2i0] : 0 <= i0 <= 1; S9[i0, i1 = 0] -> q[3i0] : 0 <= i0 <= 1; S1[i0, i1, i2 = 0] -> q[3] : 0 <= i0 <= 1 and 0 <= i1 <= 1; S2[i0, i1, i2] -> q[1 + 2i1 + 2i2] : i0 >= 0 and i1 >= 0 and 0 <= i2 <= 1 - i0 and i2 <= 1 - i1; S0[i0, i1] -> q[3i0 + 2i1] : i0 >= 0 and 0 <= i1 <= 1 - i0 }",
    "Write": "{ S4[i0, i1] -> q[i0 + 2i1] : i0 <= 1 and 0 <= i1 <= i0; S14[i0, i1, i2 = 0] -> q[1 + i0] : 0 <= i0 <= 1 and 0 <= i1 <= 1; S23[i0, i1 = 0] -> q[1 + 2i0] : 0 <= i0 <= 1; S17[i0, i1 = 0] -> q[2 - i0] : 0 <= i0 <= 1; S3[i0, i1] -> q[1 - i0 + 3i1] : i0 <= 1 and 0 <= i1 <= i0; S5[i0, i1, i2] -> q[i0 + i2] : 0 <= i0 <= 1 and i1 <= 1 and 0 <= i2 <= i1; S9[i0, i1 = 0] -> q[3i0] : 0 <= i0 <= 1; S1[i0, i1, i2 = 0] -> q[3] : 0 <= i0 <= 1 and 0 <= i1 <= 1; S2[i0, i1, i2] -> q[1 + 2i1 + 2i2] : i0 >= 0 and i1 >= 0 and 0 <= i2 <= 1 - i0 and i2 <= 1 - i1; S0[i0, i1] -> q[3i0 + 2i1] : i0 >= 0 and 0 <= i1 <= 1 - i0 }",
    "Call": "{ S3[i0, i1] -> [i0, 1 - i0 + 3i1] : i0 <= 1 and 0 <= i1 <= i0; S23[i0, i1 = 0] -> [3 - i0, 1 + 2i0] : 0 <= i0 <= 1; S4[i0, i1] -> [3 - i0, i0 + 2i1] : i0 <= 1 and 0 <= i1 <= i0; S14[i0, i1, i2 = 0] -> [i0, 1 + i0] : 0 <= i0 <= 1 and 0 <= i1 <= 1; S1[i0, i1, i2 = 0] -> [3] : 0 <= i0 <= 1 and 0 <= i1 <= 1; S0[i0, i1] -> [3i0 + 2i1] : i0 >= 0 and 0 <= i1 <= 1 - i0; S9[i0, i1 = 0] -> [3 - 2i0, 3i0] : 0 <= i0 <= 1; S2[i0, i1, i2] -> [1 + 2i1 + 2i2] : i0 >= 0 and i1 >= 0 and 0 <= i2 <= 1 - i0 and i2 <= 1 - i1; S5[i0, i1, i2] -> [i0 + i2] : 0 <= i0 <= 1 and i1 <= 1 and 0 <= i2 <= i1; S17[i0, i1 = 0] -> [1 + 2i0, 2 - i0] : 0 <= i0 <= 1 }",
    "RecoveredSchedule": "{ S4[1, 0] -> [25]; S4[1, 1] -> [23]; S4[0, 0] -> [5]; S9[i0, 0] -> [12 + i0] : 0 <= i0 <= 1; S3[1, 0] -> [8]; S3[1, 1] -> [6]; S3[0, 0] -> [4]; S17[i0, 0] -> [21 + i0] : 0 <= i0 <= 1; S1[1, 1, 0] -> [32]; S1[1, 0, 0] -> [17]; S1[0, 1, 0] -> [15]; S1[0, 0, 0] -> [0]; S0[1, 0] -> [20]; S0[0, 1] -> [18]; S0[0, 0] -> [2]; S23[i0, 0] -> [29 + i0] : 0 <= i0 <= 1; S14[1, 1, 0] -> [33]; S14[1, 0, 0] -> [31]; S14[0, 1, 0] -> [16]; S14[0, 0, 0] -> [14]; S2[1, 1, 0] -> [28]; S2[1, 0, 0] -> [19]; S2[0, 1, 0] -> [11]; S2[0, 0, 1] -> [3]; S2[0, 0, 0] -> [1]; S5[1, 1, i2] -> [27 - i2] : 0 <= i2 <= 1; S5[0, 1, i2] -> [10 - i2] : 0 <= i2 <= 1; S5[1, 0, 0] -> [24]; S5[0, 0, 0] -> [7] }",
    "AccessRead": null,
    "AccessWrite": null,
    "Stats": {
        "Qops": 34
    },
    "DomainBreakdown": {
        "2": 3,
        "3": 3,
        "4": 2,
        "5": 1,
        "6": 1
    },
    "Timing": {
        "Reconstruction": 365,
        "Scheduling": 0,
        "Total": 365
    },
    "Chunk": "100",
    "Search": "0",
    "qasm_code": "OPENQASM 2.0;\ninclude \"qelib1.inc\";\nqreg q[16];\ncreg c[16];\nh q[3];\nt q[1];\nt q[0];\nt q[3];\ncx q[0],q[1];\ncx q[3],q[0];\ncx q[1],q[3];\ntdg q[0];\ncx q[1],q[0];\ntdg q[1];\ntdg q[0];\nt q[3];\ncx q[3],q[0];\ncx q[1],q[3];\ncx q[0],q[1];\nh q[3];\ncx q[0],q[1];\nh q[3];\nt q[2];\nt q[1];\nt q[3];\ncx q[1],q[2];\ncx q[3],q[1];\ncx q[2],q[3];\ntdg q[1];\ncx q[2],q[1];\ntdg q[2];\ntdg q[1];\nt q[3];\ncx q[3],q[1];\ncx q[2],q[3];\ncx q[1],q[2];\nh q[3];\ncx q[1],q[2];\n"
}